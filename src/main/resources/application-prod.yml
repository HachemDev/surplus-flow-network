spring:
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:surplus360}?useSSL=true&serverTimezone=UTC&createDatabaseIfNotExist=true
    username: ${DB_USERNAME:surplus360}
    password: ${DB_PASSWORD:password}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      validation-timeout: 5000
      max-lifetime: 1200000
      leak-detection-threshold: 60000
  
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    database-platform: org.hibernate.dialect.MySQL8Dialect
    properties:
      hibernate:
        generate_statistics: false
        cache:
          use_second_level_cache: true
          use_query_cache: true
          region:
            factory_class: org.hibernate.cache.ehcache.EhCacheRegionFactory
  
  liquibase:
    change-log: classpath:db/changelog/db.changelog-master.xml
  
  elasticsearch:
    uris: ${ELASTICSEARCH_URI:http://localhost:9200}
    username: ${ELASTICSEARCH_USERNAME:}
    password: ${ELASTICSEARCH_PASSWORD:}
    connection-timeout: 10s
    socket-timeout: 30s
    
  mail:
    host: ${SMTP_HOST:smtp.gmail.com}
    port: ${SMTP_PORT:587}
    username: ${SMTP_USERNAME:}
    password: ${SMTP_PASSWORD:}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          ssl:
            trust: ${SMTP_HOST:smtp.gmail.com}

logging:
  level:
    com.surplus360: INFO
    org.springframework.security: WARN
    org.springframework.web: WARN
    org.hibernate: WARN
    org.hibernate.SQL: WARN
    org.hibernate.type.descriptor.sql.BasicBinder: WARN
  file:
    name: logs/surplus360-prod.log
    max-size: 100MB
    max-history: 30

server:
  port: ${SERVER_PORT:8080}
  error:
    include-message: never
    include-binding-errors: never
    include-stacktrace: never
  ssl:
    enabled: ${SSL_ENABLED:false}
    key-store: ${SSL_KEY_STORE:}
    key-store-password: ${SSL_KEY_STORE_PASSWORD:}
    key-store-type: ${SSL_KEY_STORE_TYPE:PKCS12}
    key-alias: ${SSL_KEY_ALIAS:surplus360}

app:
  jwt:
    secret: ${JWT_SECRET:}
    expiration: ${JWT_EXPIRATION:86400000}
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}
  
  cors:
    allowed-origins: ${CORS_ALLOWED_ORIGINS:https://surplus360.com,https://www.surplus360.com}
    allowed-methods: ${CORS_ALLOWED_METHODS:GET,POST,PUT,DELETE,PATCH,OPTIONS}
    allowed-headers: ${CORS_ALLOWED_HEADERS:*}
    allow-credentials: ${CORS_ALLOW_CREDENTIALS:true}
  
  file-upload:
    base-path: ${FILE_UPLOAD_BASE_PATH:/var/surplus360/uploads}
    max-size: ${FILE_UPLOAD_MAX_SIZE:50MB}
  
  notification:
    email:
      enabled: ${NOTIFICATION_EMAIL_ENABLED:true}
      from: ${NOTIFICATION_EMAIL_FROM:noreply@surplus360.com}
    websocket:
      enabled: ${NOTIFICATION_WEBSOCKET_ENABLED:true}
  
  elasticsearch:
    index-prefix: ${ELASTICSEARCH_INDEX_PREFIX:surplus360}
    refresh-interval: ${ELASTICSEARCH_REFRESH_INTERVAL:30s}
  
  security:
    rate-limit:
      enabled: true
      requests-per-minute: 100
    content-security-policy: "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https:; frame-ancestors 'none';"

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: never
  metrics:
    export:
      prometheus:
        enabled: true

springdoc:
  swagger-ui:
    enabled: false
  api-docs:
    enabled: false